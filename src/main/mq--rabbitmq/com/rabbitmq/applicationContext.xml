<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:rabbit="http://www.springframework.org/schema/rabbit"  
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       					http://www.springframework.org/schema/aop 
       					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
       					http://www.springframework.org/schema/tx 
       					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
       					http://www.springframework.org/schema/context 
       					http://www.springframework.org/schema/context/spring-context-3.0.xsd
       					http://www.springframework.org/schema/mvc 
    					http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    					http://www.springframework.org/schema/rabbit 
     					http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd">

	
	<context:component-scan base-package="com"/>
	
	<!--配置connection-factory，指定连接rabbit server参数 -->  
    <!--<rabbit:connection-factory id="connectionFactory" username="neimenggu_dianxin_huayuboji" password="neimenggu_dianxin_huayuboji" host="175.6.15.136" port="5672" virtual-host="cms_host"/>
    --><rabbit:connection-factory id="connectionFactory" username="guest" password="guest" host="127.0.0.1" port="5672"/>
   	
   	<!-- 监听器配置 -->
  	<rabbit:listener-container connection-factory="connectionFactory">
		<!-- queues是队列名称，可填多个，用逗号隔开， method是ref指定的Bean调用Invoke方法执行的方法名称 -->
		<rabbit:listener queues="neimenggu_dianxin_huayuboji_assetInfo" method="onMessage" ref="mediaAssetsListener" />
	</rabbit:listener-container>
	
	<!--队列声明 -->  
    <rabbit:queue name="neimenggu_dianxin_huayuboji_assetInfo" durable="true" auto-delete="false" exclusive="false" />  
      
    <!-- 监听处理器 -->  
    <bean id="mediaAssetsListener" class="com.mango.issued.listener.MediaAssetsListener"></bean>
			
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="shutdown">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://120.31.131.182:3366/mogo_test1?useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="username" value="root" />
		<property name="password" value="Test$$" />
		 <!-- 连接只读数据库时配置为true， 保证安全 
		<property name="readOnly" value="false" />
		 -->
		<!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
		<property name="connectionTimeout" value="30000" />
		<!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
		<property name="idleTimeout" value="600000" />
		<!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
		<property name="maxLifetime" value="1800000" />
		<!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
		<property name="maximumPoolSize" value="50" />
		<property name="minimumIdle" value="50"/>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource"></property>
       <property name="mapperLocations" value="classpath:com/mango/issued/mapper/*.xml"/>
       <property name="configLocation" value="classpath:mybatis.xml"/>
       <property name="plugins">
			<array>
				<!-- mybatis 分页插件 -->
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							reasonable=true
						</value>
					</property>
				</bean>
			</array>
		</property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <bean id="mapperscanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	    <property name="basePackage" value="com.mango.issued.dao"></property>
	</bean>
    
    
</beans>